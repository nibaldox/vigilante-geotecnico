name: CI â€” lint & test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.13]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements-lock.txt ]; then pip install -r requirements-lock.txt; fi
          pip install black isort ruff flake8 autoflake pre-commit

      - name: Run isort (check)
        run: isort . --check-only --skip venv --skip .venv --skip t_api.py

      - name: Run black (check)
        run: black . --check --exclude 't_api.py|venv|.venv|.ipynb_checkpoints'

      - name: Run ruff (check)
        run: ruff check . --format=github --exclude t_api.py,venv

      - name: Run autoflake (check)
        run: autoflake --recursive --remove-all-unused-imports --remove-unused-variables --exclude 'venv,t_api.py' --check . || true

      - name: Run flake8
        run: flake8 --exclude=venv,t_api.py --max-line-length=120

      - name: Run tests
        run: pytest -q
name: CI
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest flake8
      - name: Run linter
        run: flake8
      - name: Run tests
        run: pytest -q
